import math
import argparse
parser = argparse.ArgumentParser()
parser.add_argument("--type", type=str, help="diff or annuity")
parser.add_argument("--principal", type=int, help="credit principal value")
parser.add_argument("--payment", type=int, help="monthly payment value")
parser.add_argument("--interest", type=float, help="interest percentage")
parser.add_argument("--periods", type=int, help="count of periods")
args = parser.parse_args()

if args.type == "annuity" and args.principal and args.payment and args.interest:
    if args.principal <= 0 or args.payment <= 0 or args.interest < 0:
        print("Incorrect parameters")
    else:
        nominal = args.interest / 1200
        count_periods = math.ceil(math.log(args.payment / (args.payment - (args.principal * nominal)), 1 + nominal))
        liczba_lat = math.floor(count_periods / 12)
        liczba_miesiecy = count_periods % 12
        if liczba_miesiecy == 0:
            print("You need ", liczba_lat, "years to repay this credit!")
        else:
            if liczba_lat != 0:
                print("You need ", liczba_lat, " years and ", liczba_miesiecy, " months to repay this credit!")
            else:
                print("You need ", liczba_miesiecy, " months to repay this credit!")
        print("Overpayment = ", (count_periods * args.payment) - args.principal)
elif args.type == "annuity" and args.principal and args.periods and args.interest:
    if args.principal <= 0 or args.periods < 0 or args.interest < 0:
        print("Incorrect parameters")
    else:
        nominal = args.interest / 1200
        annuity_payment = math.ceil(args.principal * ((nominal * ((1 + nominal) ** args.periods)) / (((1 + nominal) ** args.periods) - 1)))
        print("Your annuity payment =", annuity_payment, "!")
        print("Overpayment = ", (args.periods * annuity_payment) - args.principal)
elif args.type == "annuity" and args.payment and args.periods and args.interest:
    if args.payment <= 0 or args.periods < 0 or args.interest < 0:
        print("Incorrect parameters")
    else:
        nominal = args.interest / 1200
        credit_principal = math.floor(args.payment / ((nominal * ((1 + nominal) ** args.periods)) / (((1 + nominal) ** args.periods) - 1)))
        print("Your credit principal = ", credit_principal, "!")
        print("Overpayment = ", (args.periods * args.payment) - credit_principal)
elif args.type == "diff" and args.principal and args.periods and args.interest:
    if args.principal <= 0 or args.periods < 0 or args.interest < 0:
        print("Incorrect parameters")
    else:
        nominal = args.interest / 1200
        def differentiated_payment(s, w, nominal, m):
            result = s / w + nominal * (s - (s * (m - 1)) / w)
            return result
        suma = 0
        for i in range(1, args.periods + 1):
            print("Month ", i, ": paid out ", math.ceil(differentiated_payment(args.principal, args.periods, nominal, i)))
            part_sum = math.ceil(differentiated_payment(args.principal, args.periods, nominal, i))
            suma = suma + part_sum
        print("Overpayment = ", suma - args.principal)
else:
    print("Incorrect parameters")
